on:
  push:
    tags:
      - 'v*'

name: Release .NET PDK

jobs:
  release-pdk:
    name: release-dotnet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install WASI SDK
        run: |
          mkdir ~/wasi-sdk
          cd ~/wasi-sdk/
          export WASI_VERSION=20
          export WASI_VERSION_FULL=${WASI_VERSION}.0
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_VERSION}/wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz
          tar xvf wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz

      - name: Setup Go environment
        uses: actions/setup-go@v4.1.0
        
      - name: Install Extism CLI
        run: |
          go install github.com/extism/cli/extism@latest
          extism lib install --prefix ~/extism --version git --github-token ${{ github.token }}
          mkdir -p ./tests/Extism.Pdk.WasmTests/bin/Debug/net8.0
          cp ~/extism/lib/libextism.so ./tests/Extism.Pdk.WasmTests/bin/Debug/net8.0

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3.0.3
        with:
           dotnet-version: 8
        
      - name: Install WASI workload
        run: |
          dotnet workload install wasi-experimental

      - name: Test .NET PDK
        run: |
          export WASI_SDK_PATH=~/wasi-sdk/wasi-sdk-20.0
          make test

      - name: Generate Docs
        run: |
          dotnet tool update -g docfx
          docfx ./docfx.json

      - name: Publish .NET PDK
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          make publish

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
