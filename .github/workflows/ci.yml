on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, master ]

name: .NET CI

jobs:
  test:
    name: Test .NET PDK
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust:
          - stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install WASI SDK
        run: |
          mkdir ~/wasi-sdk
          cd ~/wasi-sdk/
          export WASI_VERSION=20
          export WASI_VERSION_FULL=${WASI_VERSION}.0
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_VERSION}/wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz
          tar xvf wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz

      - name: Setup Go environment
        uses: actions/setup-go@v4.1.0
        
      - name: Install Extism CLI
        run: |
          go install github.com/extism/cli/extism@latest
          extism lib install --prefix ~/extism --version git --github-token ${{ github.token }}
          mkdir -p ./tests/Extism.Pdk.WasmTests/bin/Debug/net8.0
          cp ~/extism/lib/libextism.so ./tests/Extism.Pdk.WasmTests/bin/Debug/net8.0

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3.0.3
        with:
           dotnet-version: 8

      - name: Install WASI workload
        run: |
          dotnet workload install wasi-experimental

      - name: Test .NET PDK
        run: |
          export WASI_SDK_PATH=~/wasi-sdk/wasi-sdk-20.0
          make test
